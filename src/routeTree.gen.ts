/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchEpisodeIdRouteImport } from './routes/watch.$episodeId'

const WatchEpisodeIdRoute = WatchEpisodeIdRouteImport.update({
  id: '/watch/$episodeId',
  path: '/watch/$episodeId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/watch/$episodeId': typeof WatchEpisodeIdRoute
}
export interface FileRoutesByTo {
  '/watch/$episodeId': typeof WatchEpisodeIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/watch/$episodeId': typeof WatchEpisodeIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/watch/$episodeId'
  fileRoutesByTo: FileRoutesByTo
  to: '/watch/$episodeId'
  id: '__root__' | '/watch/$episodeId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  WatchEpisodeIdRoute: typeof WatchEpisodeIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watch/$episodeId': {
      id: '/watch/$episodeId'
      path: '/watch/$episodeId'
      fullPath: '/watch/$episodeId'
      preLoaderRoute: typeof WatchEpisodeIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  WatchEpisodeIdRoute: WatchEpisodeIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
