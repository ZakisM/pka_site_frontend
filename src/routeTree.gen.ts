/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import {Route as rootRoute} from './routes/__root';
import {Route as WatchImport} from './routes/watch';
import {Route as RouteImport} from './routes/Route';

// Create/Update Routes

const WatchRoute = WatchImport.update({
  id: '/watch',
  path: '/watch',
  getParentRoute: () => rootRoute,
} as any);

const RouteRoute = RouteImport.update({
  id: '/Route',
  path: '/Route',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/Route': {
      id: '/Route';
      path: '/Route';
      fullPath: '/Route';
      preLoaderRoute: typeof RouteImport;
      parentRoute: typeof rootRoute;
    };
    '/watch': {
      id: '/watch';
      path: '/watch';
      fullPath: '/watch';
      preLoaderRoute: typeof WatchImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/Route': typeof RouteRoute;
  '/watch': typeof WatchRoute;
}

export interface FileRoutesByTo {
  '/Route': typeof RouteRoute;
  '/watch': typeof WatchRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/Route': typeof RouteRoute;
  '/watch': typeof WatchRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/Route' | '/watch';
  fileRoutesByTo: FileRoutesByTo;
  to: '/Route' | '/watch';
  id: '__root__' | '/Route' | '/watch';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  RouteRoute: typeof RouteRoute;
  WatchRoute: typeof WatchRoute;
}

const rootRouteChildren: RootRouteChildren = {
  RouteRoute: RouteRoute,
  WatchRoute: WatchRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/Route",
        "/watch"
      ]
    },
    "/Route": {
      "filePath": "Route.tsx"
    },
    "/watch": {
      "filePath": "watch.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
